@import url('https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&display=swap');

.selectStyled {
  width: 86%;
  margin: 0.5rem auto 0 auto;
  @media (max-width: 800px) {
    display: none;
  }
  // Both native and custom selects must have the same width/height.
  .selectNative,
  .selectCustom {
    position: relative;
    width: 11rem;
    height: 3rem;
    font-weight: 700;
  }

  // Make sure the custom select does not mess with the layout
  .selectCustom {
    position: absolute;
    top: 0;
    left: 0;
    display: none;
  }

  // This media query detects devices where the primary
  // input mechanism can hover over elements. (e.g. computers with a mouse)
  @media (hover: hover) {
    // Since we are using a mouse, it's safe to show the custom select.
    .selectCustom {
      display: block;
    }

    // In a computer using keyboard? Then let's hide back the custom select
    // while the native one is focused:
    .selectNative:focus + .selectCustom {
      display: none;
    }
  }

  /* Add the focus states too, They matter, always! */
  // .selectNative:focus {
  //   box-shadow: $primary-2 0 0 0 2px;
  // }

  //
  // Rest of the styles to create the custom select.
  // Just make sure the native and the custom have a similar "box" (the trigger).
  //

  .select {
    position: relative;
  }

  .selectLabel {
    font-weight: bold;
    margin-bottom: 0.4rem;
    margin-right: 1.5rem;
  }

  .selectWrapper {
    position: relative;
    display: inline-block;
  }

  .selectNative,
  .selectCustom-trigger {
    background: $primary-1;
    color: white;
    border: 0;
    outline: 0;
    border-radius: 0.4rem;
  }

  .selectNative {
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url("data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
    background-repeat: no-repeat;
    background-position-x: 100%;
    background-position-y: 0.8rem;
    padding: 0rem 0.8rem;
  }

  .selectCustom.isActive .selectCustom-trigger {
    border-radius: 0.4rem 0.4rem 0 0;
  }

  .selectCustom-trigger {
    position: relative;
    height: 100%;
    background: $primary-1;
    color: white;
    padding: 0 0.8rem;
    line-height: 3rem;
    cursor: pointer;
    transition: color 0.3s, background-color 0.3s;
  }

  .selectCustom-trigger::after {
    content: '˄';
    position: absolute;
    top: 0;
    right: 0.8rem;
  }
  .selectCustom.isActive .selectCustom-trigger::after {
    content: '˅';
  }

  .selectCustom-trigger:hover {
    background: $primary-2;
    color: black;
  }

  .selectCustom-options {
    position: absolute;
    left: 0;
    width: 100%;
    z-index: 1;
    display: none;
  }

  .selectCustom.isActive .selectCustom-options {
    display: block;
  }

  .selectCustom-option {
    position: relative;
    padding: 0.8rem;
    padding-left: 2.5rem;
    background: $primary-1;
    color: white;
    cursor: pointer;
    transition: color 0.3s, background-color 0.3s;
  }
  .selectCustom-option:last-of-type {
    border-radius: 0 0 0.4rem 0.4rem;
  }

  .selectCustom-option.isHover,
  .selectCustom-option:hover {
    background-color: $primary-2; // contrast AA
    color: black;
  }

  .selectCustom-option:not(:last-of-type)::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    border-bottom: 1px solid white;
  }

  .selectCustom-option.isActive::before {
    content: '✓';
    position: absolute;
    left: 0.8rem;
  }
}
